name: deploy-docuhelper-api
# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.bmserver.org
  # github.repository as <account>/<repo>
  IMAGE_NAME: docuhelper-api


jobs:
  build:

    runs-on: self-hosted
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
        with:
          cosign-release: 'v2.2.4'

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Extract version from build.gradle.kts
        id: gradle_version
        run: |
          VERSION=$(sh gradlew :api-module:app:properties | grep '^version:' | awk '{print $2}')
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          file: ./api-module/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.gradle_version.outputs.version }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            DB_HOST=${{secrets.DB_HOST}}
            DB_PORT=${{secrets.DB_PORT}}
            DB_USER=${{secrets.DB_USER}}
            DB_PASSWD=${{secrets.DB_PASSWD}}
            JWT_SECRET=${{secrets.JWT_SECRET}}
            KAFKA_HOST=${{secrets.KAFKA_HOST}}
            KAFKA_PORT=${{secrets.KAFKA_PORT}}
            DOCUHELPER_FILE_ENDPOINT=${{secrets.DOCUHELPER_FILE_ENDPOINT}}
            OPENAI_API_KEY=${{secrets.OPENAI_API_KEY}}
            ELASTICSEARCH_HOST=${{secrets.ELASTICSEARCH_HOST}}
            ELASTICSEARCH_PORT=${{secrets.ELASTICSEARCH_PORT}}
            ELASTICSEARCH_API_KEY=${{secrets.ELASTICSEARCH_API_KEY}}
            REDIS_HOST=${{secrets.REDIS_HOST}}
            REDIS_PORT=${{secrets.REDIS_PORT}}
            REDIS_PASSWORD=${{secrets.REDIS_PASSWORD}}
            OLLAMA_ENDPOINT=${{secrets.OLLAMA_ENDPOINT}}
            OLLAMA_EMBEDDING_MODEL=${{secrets.OLLAMA_EMBEDDING_MODEL}}

      - name: Generate Kubernetes manifest from template
        run: |
          export IMAGE_TAG=${{ steps.gradle_version.outputs.version }}
          envsubst < docuhelper-api.yaml > deploy.yaml

      # 쿠버네티스 배포
      - name: Deploy to Kubernetes
        if: ${{ github.event_name != 'pull_request' }}
        run: kubectl apply -f deploy.yaml
